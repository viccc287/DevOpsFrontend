pipeline {
    agent any
    
    environment {
        NODE_VERSION = '18'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo 'Installing dependencies...'
                bat '''
                    npm install
                '''
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building application...'
                bat '''
                    npm run build
                '''
            }
        }
        
        stage('Archive Build Artifacts') {
            steps {
                echo 'Archiving build artifacts...'
                script {
                    // Verify dist folder exists
                    if (fileExists('dist')) {
                        archiveArtifacts artifacts: 'dist/**/*', fingerprint: true, allowEmptyArchive: false
                        stash includes: 'dist/**/*', name: 'build-artifacts'
                        echo "Build artifacts archived successfully"
                    } else {
                        error("dist folder not found. Build may have failed.")
                    }
                }
            }
        }
        
        stage('Trigger Deploy') {
            steps {
                echo 'Triggering deployment pipeline...'
                script {
                    def deployJob = build job: 'frontend-deploy', 
                          parameters: [
                              string(name: 'BUILD_NUMBER', value: "${BUILD_NUMBER}"),
                              string(name: 'BUILD_JOB_NAME', value: "${JOB_NAME}")
                          ],
                          wait: false,
                          propagate: false
                    
                    echo "Deploy job triggered: ${deployJob.getFullDisplayName()}"
                }
            }
        }
    }
    
    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Build completed successfully!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
